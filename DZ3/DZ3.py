# Дан список повторяющихся элементов. Вернуть список
# с дублирующимися элементами. В результирующем списке
# не должно быть дубликатов.

import random

def Duplic():
    list_random = []

    for k in range(0, 20):
        list_random.append(random.randint(1, 20))

    print(list_random)

    list_duplic = [x for i, x in enumerate(list_random) if i != list_random.index(x)]

    print(set(list_duplic))

Duplic()

# В большой текстовой строке подсчитать количество встречаемых
# слов и вернуть 10 самых частых. Не учитывать знаки препинания
# и регистр символов. За основу возьмите любую статью из википедии
# или из документации к языку

text = 'Жили-были старик со старухой. Вот и просит старик: \
— Испеки мне, старая, колобок. \
— Да из чего испечь-то? Муки нет. \
— Эх, старуха. По амбару помети, по сусечкам поскреби — вот и наберётся. \
Старушка так и сделала: намела, наскребла горсти две муки, замесила тесто на сметане, скатала колобок, \
    изжарила его в масле и положила на окно простынуть. \
Надоело колобку лежать — он и покатился с окна на лавку, с лавки на пол — да к двери, \
    прыг через порог, в сени, из сеней на крыльцо, с крыльца на двор, а там и за ворота, \
    дальше и дальше. \
Катится колобок по дороге, а навстречу ему заяц: \
— Колобок, колобок! Я тебя съем! \
— Нет, не ешь меня, косой, а лучше послушай, какую я тебе песенку спою. \
Заяц уши поднял, а колобок запел: \
— Я колобок, колобок, \
По амбару метён, \
По сусечкам скребён, \
На сметане мешён, \
В печку сажён, \
На окошке стужён. \
Я от дедушки ушёл, \
Я от бабушки ушёл, \
От тебя, зайца, \
Не хитро уйти. \
И покатился колобок дальше — только его заяц и видел. \
Катится колобок по тропинке в лесу, а навстречу ему серый волк: \
— Колобок, колобок! Я тебя съем! \
— Не ешь меня, серый волк: я тебе песенку спою. И колобок запел: \
— Я колобок, колобок, \
По амбару метён, \
По сусечкам скребён, \
На сметане мешён, \
В печку сажён, \
На окошке стужён. \
Я от дедушки ушёл, \
Я от бабушки ушёл, \
Я от зайца ушёл, \
От тебя, волка, \
Не хитро уйти. \
И покатился колобок дальше — только его волк и видел. \
Катится колобок по лесу, а навстречу ему медведь идёт, хворост ломает, кусты к земле гнёт. \
— Колобок, колобок, я тебя съем! \
— Ну где тебе, косолапому, съесть меня! Послушай лучше мою песенку. \
Колобок запел, а Миша и уши развесил: \
— Я колобок, колобок, \
По амбару метён, \
По сусечкам скребён, \
На сметане мешён, \
В печку сажён, \
На окошке стужён. \
Я от дедушки ушёл, \
Я от бабушки ушёл, \
Я от зайца ушёл, \
Я от волка ушёл, \
От тебя, медведь, \
Полгоря уйти. \
И покатился колобок — медведь только вслед ему посмотрел.\
Катится колобок, а навстречу ему лиса: \
    — Здравствуй, колобок! Какой ты пригоженький, румяненький! \
Колобок рад, что его похвалили, и запел свою песенку, а лиса слушает да всё ближе подкрадывается: \
— Я колобок, колобок,\
По амбару метён, \
По сусечкам скребён, \
На сметане мешён, \
В печку сажён, \
На окошке стужён. \
Я от дедушки ушёл, \
Я от бабушки ушёл, \
Я от зайца ушёл, \
Я от волка ушёл, \
От медведя ушёл, \
От тебя, лиса, \
Не хитро уйти. \
— Славная песенка! — сказала лиса. — Да то беда, голубчик, что стара я стала — плохо слышу. \
    Сядь ко мне на мордочку да пропой ещё разочек. \
Колобок обрадовался, что его песенку похвалили, прыгнул лисе на морду и запел: \
— Я колобок, колобок... \
А лиса его — гам! — и съела.'

print('Топ-10 самых часто встречаемых слов: ')

text = "".join([i for i in text.lower() if i.isalpha() or i == " "])
text = text.split()

n = 10
dictText = dict()
for i in text:
    dictText[i] = dictText.get(i, 0) + 1
sortWord = sorted(dictText.items(), key=lambda x: (-x[1], x[0]))[:n]
for word, count in sortWord:
    print(f" '{word}' - {count} раз")
    

# Создайте словарь со списком вещей для похода в качестве ключа 
# и их массой в качестве значения. Определите какие вещи влезут 
# в рюкзак передав его максимальную грузоподъёмность. Достаточно 
# вернуть один допустимый вариант. 
# *Верните все возможные варианты комплектации рюкзака

list_hike = {'палатка': 5, 'матрац': 1.7, 'продукты': 4, 'одеяло': 1.5, 'котел': 3, 'вода': 2, 'одежда': 2, 'спички': 0.1, 'лопата': 0.5, 'полотенце': 0.3}
max_weight = 12
backpac_hike = {}
for key, value in list_hike.items():
    if maxWeight - value >= 0:
        backpac_hike[key] = value
        maxWeight = maxWeight - value
print(backpac_hike)